@model VitaCraft.Models.DTOs.ResumeJsonDto

@{
    ViewData["Title"] = "Preview Resume";
    Layout = null; /* هذه السطر يزيل الـ layout تمامًا */
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4361ee;
            --primary-light: #4895ef;
            --secondary: #3f37c9;
            --dark: #1a1a2e;
            --light: #f8f9fa;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --white: #ffffff;
            --accent: #7209b7;
        }

        body {
            background-color: #f8fafc;
            font-family: 'Poppins', -apple-system, BlinkMacSystemFont, sans-serif;
            color: var(--dark);
            line-height: 1.6;
            padding: 0;
            margin: 0;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .resume-container {
            max-width: 800px;
            margin: 2rem;
            padding: 3rem;
            background: white;
            box-shadow: 0 10px 50px rgba(0, 0, 0, 0.08);
            border-radius: 16px;
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(0,0,0,0.05);
        }

        .resume-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 2rem;
            position: relative;
        }

        .name-title {
            flex: 1;
        }

        .name {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.25rem;
            color: var(--dark);
            position: relative;
            display: inline-block;
        }

            .name::after {
                content: '';
                position: absolute;
                bottom: -5px;
                left: 0;
                width: 50px;
                height: 4px;
                background: linear-gradient(90deg, var(--primary), var(--accent));
                border-radius: 2px;
            }

        .title {
            font-size: 1.25rem;
            font-weight: 500;
            color: var(--gray);
            margin-bottom: 1rem;
        }

        .contact-info {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .contact-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--dark);
            text-decoration: none;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

            .contact-item:hover {
                color: var(--primary);
            }

        .contact-icon {
            width: 16px;
            height: 16px;
            color: var(--primary);
        }

        .section {
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--dark);
            margin-bottom: 1rem;
            position: relative;
            padding-bottom: 0.5rem;
        }

            .section-title::after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 40px;
                height: 3px;
                background: linear-gradient(90deg, var(--primary), var(--accent));
                border-radius: 3px;
            }

        .experience-item, .education-item, .certificate-item {
            margin-bottom: 1.5rem;
            padding-left: 1.5rem;
            border-left: 2px solid var(--light-gray);
            position: relative;
        }

        .item-header {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            margin-bottom: 0.25rem;
        }

        .item-title {
            font-weight: 600;
            color: var(--dark);
            font-size: 1.05rem;
        }

        .item-subtitle {
            color: var(--gray);
            font-size: 0.9rem;
            margin-bottom: 0.25rem;
        }

        .item-date {
            color: var(--primary);
            font-size: 0.85rem;
            font-weight: 500;
            background: rgba(67, 97, 238, 0.1);
            padding: 0.2rem 0.6rem;
            border-radius: 20px;
        }

        .duties {
            color: var(--dark);
            font-size: 0.9rem;
            line-height: 1.7;
            margin-top: 0.5rem;
        }

            .duties ul {
                padding-left: 1rem;
                margin: 0.5rem 0;
            }

            .duties li {
                margin-bottom: 0.25rem;
                position: relative;
                padding-left: 1rem;
            }

                .duties li::before {
                    content: '•';
                    position: absolute;
                    left: 0;
                    color: var(--primary);
                    font-weight: bold;
                }

        .skills-container {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .skill-badge {
            background: white;
            color: var(--dark);
            padding: 0.4rem 1rem;
            border-radius: 50px;
            font-size: 0.85rem;
            font-weight: 500;
            border: 1px solid var(--light-gray);
            transition: all 0.3s ease;
        }

            .skill-badge:hover {
                background: var(--primary);
                color: white;
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(67, 97, 238, 0.2);
            }

        .no-data {
            color: var(--gray);
            font-style: italic;
            font-size: 0.9rem;
        }

        @@media (max-width: 768px) {
            .resume-container {
                padding: 2rem;
                margin: 1rem;
            }

            .resume-header {
                flex-direction: column;
            }

            .contact-info {
                margin-top: 1rem;
            }

            .name {
                font-size: 2rem;
            }

            .title {
                font-size: 1.1rem;
            }
        }

        @@media print {
            body {
                background: none;
            }

            .resume-container {
                box-shadow: none;
                border: none;
                padding: 0;
                margin: 0;
                max-width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="resume-container">
        <!-- Header Section -->
        <div class="resume-header">
            <div class="name-title">
                <h1 class="name">@Model.FirstName @Model.LastName</h1>
                @if (!string.IsNullOrWhiteSpace(Model.Title))
                {
                    <div class="title">@Model.Title</div>
                }
            </div>

            <div class="contact-info">
                @if (!string.IsNullOrWhiteSpace(Model.Email))
                {
                    <a href="mailto:@Model.Email" class="contact-item">
                        <svg class="contact-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                            <polyline points="22,6 12,13 2,6"></polyline>
                        </svg>
                        @Model.Email
                    </a>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PhoneNumber))
                {
                    <a href="tel:@Model.PhoneNumber" class="contact-item">
                        <svg class="contact-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                        </svg>
                        @Model.PhoneNumber
                    </a>
                }
                @if (!string.IsNullOrWhiteSpace(Model.LinkedinLink))
                {
                    <a href="@Model.LinkedinLink" target="_blank" class="contact-item">
                        <svg class="contact-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
                            <rect x="2" y="9" width="4" height="12"></rect>
                            <circle cx="4" cy="4" r="2"></circle>
                        </svg>
                        LinkedIn
                    </a>
                }
                @if (!string.IsNullOrWhiteSpace(Model.GitHubLink))
                {
                    <a href="@Model.GitHubLink" target="_blank" class="contact-item">
                        <svg class="contact-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
                        </svg>
                        GitHub
                    </a>
                }
            </div>
        </div>

        <!-- Summary Section -->
        @if (!string.IsNullOrWhiteSpace(Model.Summary))
        {
            <div class="section">
                <h3 class="section-title">Professional Summary</h3>
                <div class="duties">@Html.Raw(Model.Summary.Replace("\n", "<br>"))</div>
            </div>
        }

        <!-- Experience Section -->
        <div class="section">
            <h3 class="section-title">Experience</h3>
            @if (Model.Experiences != null && Model.Experiences.Any())
            {
                foreach (var exp in Model.Experiences)
                {
                    <div class="experience-item">
                        <div class="item-header">
                            <div>
                                <span class="item-title">@exp.Title</span>
                                <div class="item-subtitle">@exp.Company</div>
                            </div>
                            <span class="item-date">@exp.StartDate – @(exp.IsCurrent == true ? "Present" : exp.EndDate)</span>
                        </div>
                        @if (!string.IsNullOrWhiteSpace(exp.Duties))
                        {
                            <div class="duties">@Html.Raw(exp.Duties.Replace("\n", "<br>"))</div>
                        }
                    </div>
                }
            }
            else
            {
                <p class="no-data">No work experience provided.</p>
            }
        </div>

        <!-- Education Section -->
        <div class="section">
            <h3 class="section-title">Education</h3>
            @if (Model.Educations != null && Model.Educations.Any())
            {
                foreach (var edu in Model.Educations)
                {
                    <div class="education-item">
                        <div class="item-header">
                            <div>
                                <span class="item-title">@edu.CollegeName</span>
                                <div class="item-subtitle">
                                    @edu.DegreeType
                                    @if (!string.IsNullOrWhiteSpace(edu.Major))
                                    {
                                        <span>in @edu.Major</span>
                                    }
                                </div>
                            </div>
                            @if (edu.StartDate != null || edu.EndDate != null)
                            {
                                <span class="item-date">@edu.StartDate – @edu.EndDate</span>
                            }
                        </div>
                        @if (edu.GPA.HasValue)
                        {
                            <div class="item-subtitle">GPA: @edu.GPA.Value.ToString("0.00")</div>
                        }
                    </div>
                }
            }
            else
            {
                <p class="no-data">No education information provided.</p>
            }
        </div>

        <!-- Skills Section -->
        <div class="section">
            <h3 class="section-title">Skills</h3>
            @if (Model.Skills != null && Model.Skills.Any())
            {
                <div class="skills-container">
                    @foreach (var skill in Model.Skills)
                    {
                        <div class="skill-badge">@skill.SkillName</div>
                    }
                </div>
            }
            else
            {
                <p class="no-data">No skills listed.</p>
            }
        </div>

        <!-- Certificates Section -->
        <div class="section">
            <h3 class="section-title">Certifications</h3>
            @if (Model.Certificates != null && Model.Certificates.Any())
            {
                foreach (var cert in Model.Certificates)
                {
                    <div class="certificate-item">
                        <div class="item-header">
                            <div>
                                <span class="item-title">@cert.Field</span>
                                <span class="item-subtitle">@cert.ProviderName</span>
                            </div>
                            @if (cert.StartDate != null || cert.EndDate != null)
                            {
                                <span class="item-date">@cert.StartDate?.ToString() – @cert.EndDate?.ToString()</span>
                            }
                        </div>
                        @if (cert.GPA.HasValue)
                        {
                            <div class="item-subtitle">GPA: @cert.GPA.Value.ToString("0.00")</div>
                        }
                    </div>
                }
            }
            else
            {
                <p class="no-data">No certificates listed.</p>
            }
        </div>
    </div>
</body>
</html>